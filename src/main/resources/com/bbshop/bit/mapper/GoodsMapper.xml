<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbshop.bit.mapper.GoodsMapper">

	<!-- 검색 기준을 <sql>에 묶음 -->
	<sql id="criteria">
		<choose>
			<when test="sorting == 'new'">
				SELECT /*+INDEX_DESC(goods idx_goods_date) */
			</when>
			<when test="sorting == 'best'">
				SELECT /*+INDEX_DESC(goods idx_goods_best) */
			</when>
			<when test="sorting == 'lowPrice'">
				SELECT /*+INDEX_ASC(goods idx_goods_price) */
			</when>
			<when test="sorting == 'highPrice'">
				SELECT /*+INDEX_DESC(goods idx_goods_price) */
			</when>
		</choose>
		rownum rn, g.goods_num, g.name, g.main_img, g.price, g.best,
		g.regdate, gg.position, gg.hand, g.brand
		FROM goods g, gd_glove gg
		WHERE g.goods_num = gg.goods_num
		<if test="pagingVO.type != null and !pagingVO.type.equals('')">
			AND name like '%'||#{pagingVO.keyword}||'%'
		</if>
		<if test='positions.size != 0'>
			AND position IN
			<foreach item="val" index="index" collection="positions"
				open="(" separator="," close=")">
				#{val}
			</foreach>
		</if>
		<if test='hands.size != 0'>
			AND hand IN
			<foreach item="val" index="index" collection="hands" open="("
				separator="," close=")">
				#{val}
			</foreach>
		</if>
		<if test='brands.size != 0'>
			AND brand IN
			<foreach item="val" index="index" collection="brands"
				open="(" separator="," close=")">
				#{val}
			</foreach>
		</if>
<![CDATA[
			and rownum <= #{pagingVO.pageNum, jdbcType=INTEGER} * #{pagingVO.amount, jdbcType=INTEGER} 
]]>
			and category = #{category, jdbcType=INTEGER}
<![CDATA[	and price > #{min_amount, jdbcType=INTEGER}	
			and price < #{max_amount, jdbcType=INTEGER}	
]]>
		<choose>
			<when test="sorting == 'new'">
<![CDATA[	and regdate > '18/01/01'	]]>
			</when>
			<when test="sorting == 'best'">
<![CDATA[	AND best >= 0	]]>
			</when>
		</choose>
	</sql>

<!-- 페이징 O -->
<!-- 상품 목록, sorting값에 따라 동적쿼리 -->
<!-- 전달받은 hashmap[pagingVO(pageNum,amount), category, sorting] -->
<select id="getGoodsList" parameterType="hashmap" resultType="com.bbshop.bit.domain.GoodsVO">
	SELECT DISTINCT rownum rn, goods_num, name, main_img, price, best, regdate, position, hand, brand
	FROM 
		(
			<include refid="criteria"></include>
		)
<![CDATA[
	WHERE rn > (#{pagingVO.pageNum, jdbcType=INTEGER}-1) * #{pagingVO.amount, jdbcType=INTEGER}
]]>	
</select>

<!-- 카테고리 별, goods 데이터 개수 */ -->
<select id="getTotalCount" parameterType="hashmap" resultType="int">
	SELECT count(*) 
	FROM goods 
	WHERE category = #{category, jdbcType=INTEGER}
</select>

<!-- ajax로 데이터 불러올 때 전체 개수 구하기  -->
<select id="getTotalCountAjax" parameterType="hashmap" resultType="int">
		<choose>
			<when test="sorting == 'new'">
				SELECT /*+INDEX_DESC(goods idx_goods_date) */
			</when>
			<when test="sorting == 'best'">
				SELECT /*+INDEX_DESC(goods idx_goods_best) */
			</when>
			<when test="sorting == 'lowPrice'">
				SELECT /*+INDEX_ASC(goods idx_goods_price) */
			</when>
			<when test="sorting == 'highPrice'">
				SELECT /*+INDEX_DESC(goods idx_goods_price) */
			</when>
		</choose>
			count(*)
		FROM goods g, gd_glove gg
		WHERE g.goods_num = gg.goods_num
		<if test="pagingVO.type != null and !pagingVO.type.equals('')">
			AND name like '%'||#{pagingVO.keyword}||'%'
		</if>
		<if test='positions.size != 0'>
			AND position IN
			<foreach item="val" index="index" collection="positions"
				open="(" separator="," close=")">
				#{val}
			</foreach>
		</if>
		<if test='hands.size != 0'>
			AND hand IN
			<foreach item="val" index="index" collection="hands" open="("
				separator="," close=")">
				#{val}
			</foreach>
		</if>
		<if test='brands.size != 0'>
			AND brand IN
			<foreach item="val" index="index" collection="brands"
				open="(" separator="," close=")">
				#{val}
			</foreach>
		</if>
			and category = #{category, jdbcType=INTEGER}
<![CDATA[	and price > #{min_amount, jdbcType=INTEGER}	
			and price < #{max_amount, jdbcType=INTEGER}	
]]>
		<choose>
			<when test="sorting == 'new'">
<![CDATA[	and regdate > '18/01/01'	]]>
			</when>
			<when test="sorting == 'best'">
<![CDATA[	AND best >= 0	]]>
			</when>
		</choose>
</select>

<!-- 상품 조회 -->
<select id="getGoodsInfo" resultType="com.bbshop.bit.domain.GoodsVO">
	select * from goods where goods_num = #{goods_num}
</select>


<!--======================================================================-->


<!-- 상품 QNA 등록 - insert문이 실행되고 생성된  pk(시퀀스) 값을 알아야 하는 경우 -->
<insert id="insertGoodsQnaSelectKey">
	
	<selectKey keyProperty="qna_num" order="BEFORE" resultType="long">
		select seq_qna.nextval from dual
	</selectKey>

	insert into qna
	values(#{qna_num}, #{title}, #{content}, #{attached_file}, sysdate, #{goods_num}, 950131, #{qna_num}, 0, 0)
</insert>


<!-- 상품 QNA 목록 (goods_num이 카테고리) -->
<!-- hashmap[pagingVO(pageNum, amount), goods_num] -->
<select id="getQnaList" parameterType="hashmap" resultType="com.bbshop.bit.domain.GoodsQnaVO">
	select *
	from (
		select /*+INDEX(qna idx_qna_list) */
			rownum rn, qna_num, title, content, attached_file, regdate, goods_num, user_key, re_ref, re_lev, re_seq
		from QNA
<![CDATA[
		where rownum <= #{pagingVO.pageNum, jdbcType=INTEGER} * #{pagingVO.amount, jdbcType=INTEGER} 
]]>	
			and goods_num = #{goods_num, jdbcType=INTEGER}
<![CDATA[	
			and re_ref > 0
	)
	where rn > (#{pagingVO.pageNum, jdbcType=INTEGER}-1) * #{pagingVO.amount, jdbcType=INTEGER}
]]>	
</select>



<!--======================================================================-->



<!-- user_key를 이용해 moredetail을 가져온다. -->
<select id="findDetail" resultType="com.bbshop.bit.domain.MoreDetailVO">
	select * from u_moredetail where user_key = #{user_key}
</select>

<!-- 추천 상품 : 회원 -->
<select id="recommendGoodsList" resultType="com.bbshop.bit.domain.GoodsVO">
	select distinct a.*
	from goods a, gd_glove b, gd_uniform c
	where
		(a.brand in (#{brand1}, #{brand2}, #{brand3}) and b.position = #{position} and a.goods_num = b.goods_num) 
		
		or
		
		(a.brand in (#{brand1}, #{brand2}, #{brand3}) and c.team = #{team} and a.goods_num = c.goods_num)
	order by a.goods_num 
</select>

<!-- 추천 상품 : 회원 -->
<select id="recommendBestList" resultType="com.bbshop.bit.domain.GoodsVO">
	select *
	from ( 
		select /*+INDEX_DESC(goods idx_goods_best) */
			rownum rn, goods_num, name, main_img, price, best, regdate
		from goods
<![CDATA[		
	where rownum <= 10 and best >= 0
	)
	where rn > 0
]]>
</select>


</mapper>